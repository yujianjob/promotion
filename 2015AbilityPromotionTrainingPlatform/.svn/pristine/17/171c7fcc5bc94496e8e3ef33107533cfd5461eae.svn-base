using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Web.Code;
using Dianda.AP.BLL;
using Dianda.AP.Model;

namespace Web.Areas.ClassDomain.Controllers
{
    //班级教学
    public class ClassTeacherController : Controller
    {
        public class KeyValue
        {
            public string Title { get; set; }
            public string Id { get; set; }
        }

        //班级列表
        public ActionResult ClassTeacherList(int? param_plan, int? param_subject, int? param_status, string param_searchTxt, int pageIndex = 1)
        {
            int totalPage;
            var fkBll = new Traning_InfoFkBLL();
            var traningBll = new Training_PlanBLL();
            ViewBag.PlanList = DataTableToListHelper<Dianda.AP.Model.Training_Plan>.ConvertToModel(traningBll.GetList("  Delflag=0 and Display=1 ").Tables[0]);
            ViewBag.StatusList = new List<KeyValue> { new KeyValue { Title = "111", Id = "1" } };
            ViewBag.SubjectList = fkBll.GetList(" CategoryType=3 and Delflag=0 and Display=1 ", "Sort desc");
            //为审核通过，已开班，已结业，已暂停。Display=1，delflag=0.
            string where = " Display=1 and  Delflag=0 and status in (3,5,6) ";
            where += " and exists (SELECT 1 FROM dbo.Traning_Teacher WHERE  Traning_Teacher.TraningId=dbo.Class_Detail.TraningId AND PlatformManagerId=" + SiteCache.Instance.ManagerId +")";
            if (param_plan.HasValue)//学期计划
            {
                where += " and PlanId =" + param_plan.Value;
            }
            if (param_subject.HasValue)//学科
            {
                where += " and TraningId =" + param_subject.Value;
            }
            if (param_status.HasValue)//状态
            {
                where += " and Status =" + param_status.Value;
            }
            if (!string.IsNullOrEmpty(param_searchTxt))//查询条件
            {
                where += " and( Title like '%" + param_searchTxt + "%' or exists( SELECT 1 FROM dbo.Traning_Detail WHERE Title LIKE '%"
                    + param_searchTxt + "%' AND id=Class_Detail.TraningId))";
            }
            var list = DataTableToListHelper<Dianda.AP.Model.Class_Detail>.ConvertToModel(PagingQueryBll.GetPagingDataTable("Class_Detail", where, "id", pageIndex, out totalPage));

            ViewBag.pageIndex = pageIndex;
            ViewBag.totalPage = totalPage;
            ViewBag.basecount = 10;
            return View(list);
        }

        //进度列表
        public ActionResult ClassProgress(int classId, int? isPass, int pageIndex = 1)
        {
            int totalPage;

            string where = " ClassId= " + classId;

            if (isPass.HasValue)
                where += " and IsPass=" + isPass.Value;

            var list = DataTableToListHelper<Dianda.AP.Model.Member_ClassRegister>.ConvertToModel(PagingQueryBll.GetPagingDataTable("Member_ClassRegister", where, "id", pageIndex, out totalPage));

            ViewBag.classId = classId;
            ViewBag.pageIndex = pageIndex;
            ViewBag.totalPage = totalPage;
            ViewBag.basecount = 10;
            return View(list);
        }

        //分组列表
        public ActionResult ClassGroup(int classId, int groupId = 0, int pageIndex = 1)
        {
            IList<Member_BaseInfo> list = new List<Member_BaseInfo>();
            int totalPage = 0;

            string where = " cg.ClassId= " + classId + " AND cgm.Delflag=0";

            if (groupId == 0)//全部组
            {
                list = DataTableToListHelper<Dianda.AP.Model.Member_BaseInfo>
                .ConvertToModel(PagingQueryBll.GetPagingDataTable(@"dbo.Class_GroupMember cgm
JOIN dbo.Class_Group cg ON cgm.GroupId=cg.Id
JOIN dbo.Member_Account b ON cgm.AccountId=b.id
JOIN dbo.Member_BaseInfo mb ON cgm.AccountId=mb.AccountId", where, "cgm.CreateDate", pageIndex, out totalPage, "mb.*,CONVERT(VARCHAR,cg.ClassId)+'|'+CONVERT(VARCHAR,cg.id) AS ClassId_GroupId"));
            }
            if (groupId > 0)//单组
            {
                where += " and cgm.GroupId=" + groupId;
                list = DataTableToListHelper<Dianda.AP.Model.Member_BaseInfo>
                .ConvertToModel(PagingQueryBll.GetPagingDataTable(@"dbo.Class_GroupMember cgm
JOIN dbo.Class_Group cg ON cgm.GroupId=cg.Id
JOIN dbo.Member_Account b ON cgm.AccountId=b.id
JOIN dbo.Member_BaseInfo mb ON cgm.AccountId=mb.AccountId", where, "cgm.CreateDate", pageIndex, out totalPage, "mb.*,CONVERT(VARCHAR,cg.ClassId)+'|'+CONVERT(VARCHAR,cg.id) AS ClassId_GroupId"));
            }
            if (groupId < 0)//无组
            {
                where = @" NOT EXISTS ( SELECT 1
                     FROM   dbo.Class_Group cg
                            JOIN dbo.Class_GroupMember cgm ON cg.Id = cgm.GroupId
                     WHERE  cg.ClassId = t.ClassId AND t.AccountId=cgm.AccountId)";
                list = DataTableToListHelper<Dianda.AP.Model.Member_BaseInfo>
               .ConvertToModel(PagingQueryBll.GetPagingDataTable(@"dbo.Member_ClassRegister t
JOIN dbo.Member_Account m ON t.AccountId=m.id
JOIN dbo.Member_BaseInfo mb ON m.Id=mb.AccountId", where, "mb.CreateDate", pageIndex, out totalPage, "mb.*,'' AS ClassId_GroupId"));
            }

            var gBll = new Dianda.AP.BLL.Class_GroupBLL();
            var allGroup = gBll.GetList(" ClassId=" + classId + " and Delflag=0 AND Display=1", "");

            //无组人员
            where = @" NOT EXISTS ( SELECT 1
                     FROM   dbo.Class_Group cg
                            JOIN dbo.Class_GroupMember cgm ON cg.Id = cgm.GroupId
                     WHERE  cg.ClassId = t.ClassId AND t.AccountId=cgm.AccountId)";
            var noGrouper = DataTableToListHelper<Dianda.AP.Model.Member_BaseInfo>
           .ConvertToModel(PagingQueryBll.GetPagingDataTable(@"dbo.Member_ClassRegister t
JOIN dbo.Member_Account m ON t.AccountId=m.id
JOIN dbo.Member_BaseInfo mb ON m.Id=mb.AccountId", where, "mb.CreateDate", pageIndex, out totalPage, "mb.*,'' AS ClassId_GroupId"));
            ViewBag.noGrouper = noGrouper;

            ViewBag.GroupList = allGroup;
            ViewBag.classId = classId;
            ViewBag.pageIndex = pageIndex;
            ViewBag.totalPage = totalPage;
            ViewBag.basecount = 10;
            return View(list);
        }

        //删除班级小组
        public JsonResult DeleteClassGroup(int classId, int groupId)
        {
            try
            {
                var bll = new Class_GroupBLL();
                var model = bll.GetModel(groupId, " ClassId=" + classId);
                model.Delflag = true;
                bll.Update(model);

                var membll = new Class_GroupMemberBLL();
                var member = membll.GetListModel("GroupId=" + model.Id);
                foreach (var item in member)
                {
                    item.Delflag = true;
                    membll.Update(item);
                }

                return Json(new { Code = 0, Msg = "提交成功" }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Code = -1, Msg = ex.Message }, JsonRequestBehavior.AllowGet);
            }
        }

        //删除班级小组成员
        public JsonResult DeleteClassGroupMember(string groupId, int accountId)
        {
            try
            {
                var bll = new Class_GroupMemberBLL();
                var model = bll.GetModel(groupId.Split('|')[1].ToInt(), accountId);
                model.Delflag = true;
                bll.Update(model);

                return Json(new { Code = 0, Msg = "提交成功" }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Code = -1, Msg = ex.Message }, JsonRequestBehavior.AllowGet);
            }
        }

        //添加小组及成员
        public JsonResult AddClassGroupMember(int classId, string groupTitle, string accountIds)
        {
            try
            {
                var gbll = new Class_GroupBLL();
                var gmbll = new Class_GroupMemberBLL();
                var gModel = new Class_Group();
                gModel.ClassId = classId;
                gModel.CreateDate = DateTime.Now;
                gModel.Display = true;
                gModel.Delflag = false;
                gModel.Title = groupTitle;
                gbll.Add(gModel);

                var ids = accountIds.Split(',');
                foreach (var item in ids)
                {
                    if (!string.IsNullOrEmpty(item))
                    {
                        var gmModel = new Class_GroupMember();
                        gmModel.AccountId = item.ToInt();
                        gmModel.GroupId = gModel.Id;
                        gmModel.Delflag = false;
                        gmModel.CreateDate = DateTime.Now;
                        gmbll.Add(gmModel);
                    }
                }

                return Json(new { Code = 0, Msg = "提交成功" }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Code = -1, Msg = ex.Message }, JsonRequestBehavior.AllowGet);
            }
        }

        //作业列表
        public ActionResult ClassTask(int classId, string unit, string status, int pageIndex = 1)
        {

            int totalPage = 0;

            string where = "mc.ClassId = " + classId + " AND mc.Delflag=0";

            string param_unit = string.IsNullOrEmpty(unit) ? "" : " AND cu.Id= " + unit;//单元

            string param_status = "";//状态

            switch (status)
            {
                case "-1"://未提交
                    param_status = @" and not EXISTS ( SELECT 1
                     FROM   dbo.Course_UnitHomeWork cw
                            JOIN dbo.Course_UnitContent cu ON cw.UnitContent = cu.Id
                     WHERE  mc.AccountId = cw.AccountId
                            AND cw.ClassId = mc.ClassId
                            AND cu.UnitType = 4" + param_unit + " )";
                    break;
                case "0"://单元未得分
                    param_status = @" AND  EXISTS ( SELECT 1
                     FROM   dbo.Course_UnitHomeWork cw
                            JOIN dbo.Course_UnitContent cu ON cw.UnitContent = cu.Id
                     WHERE  mc.AccountId = cw.AccountId
                            AND cw.ClassId = mc.ClassId
                            AND cu.UnitType = 4 " + param_unit + " AND cw.Score IS  NULL )";
                    break;
                case "1"://单元已得分
                    param_status = @" AND  EXISTS ( SELECT 1
                     FROM   dbo.Course_UnitHomeWork cw
                            JOIN dbo.Course_UnitContent cu ON cw.UnitContent = cu.Id
                     WHERE  mc.AccountId = cw.AccountId
                            AND cw.ClassId = mc.ClassId
                            AND cu.UnitType = 4 " + param_unit + " AND cw.Score IS NOT NULL )";
                    break;
                default://全部 
                    break;
            }

            //Model
            var list = DataTableToListHelper<Dianda.AP.Model.Member_BaseInfo>
           .ConvertToModel(PagingQueryBll.GetPagingDataTable(@"dbo.Member_ClassRegister mc
        JOIN dbo.Member_Account ma ON mc.AccountId = ma.Id
        JOIN dbo.Member_BaseInfo mb ON ma.Id = mb.AccountId", where + param_status, "mb.CreateDate", pageIndex, out totalPage, @"mb.* ,
        homeworkId = ( SELECT TOP 1
                                cw.Id
                       FROM     dbo.Course_UnitHomeWork cw
                                JOIN dbo.Course_UnitContent cu ON cw.UnitContent = cu.Id
                       WHERE    cw.ClassId = mc.ClassId
                                AND cw.AccountId = mc.AccountId
                                AND cu.UnitType = 4 " + param_unit + @"
                     )"));

            var classUnit = new Course_UnitHomeWorkBLL().GetList(" ClassId=" + classId, "").GroupBy(s => s.UnitContent);
            ViewBag.UnitList = from c in classUnit select c.Key;

            ViewBag.classId = classId;
            //分页
            ViewBag.pageIndex = pageIndex;
            ViewBag.totalPage = totalPage;
            ViewBag.basecount = 10;
            return View(list);
        }

        //打分
        public JsonResult AddScore(int Id, string Val)
        {
            try
            {
                var bll = new Course_UnitHomeWorkBLL();
                var model = bll.GetModel(Id, "");
                model.Score = Convert.ToDouble(Val);
                model.ScoreCreater = SiteCache.Instance.LoginInfo.UserId;
                bll.Update(model);

                return Json(new { Code = 0, Msg = "提交成功" }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Code = -1, Msg = ex.Message }, JsonRequestBehavior.AllowGet);
            }
        }

        //小组讨论
        public ActionResult ClassDiscuss(int classId, int unitId = 0, int pageIndex = 1, int pageIndex2 = 1)
        {
            int totalPage = 0;
            int totalPage2 = 0;

            var topicList = new Course_UnitContentBLL().GetList(@" id IN (
        SELECT  re.UnitContent
        FROM    dbo.Class_Group cg
                JOIN dbo.Class_GroupMember cgm ON cg.id = cgm.GroupId
                JOIN dbo.Course_UnitReplyDetail re ON cgm.AccountId = re.AccountId
        WHERE   cg.ClassId = " + classId + @"
        GROUP BY re.UnitContent )", " id desc");
            ViewBag.topicList = topicList;

            ViewBag.currentTopic = unitId == 0 ? topicList[0].Content : new Course_UnitContentBLL().GetModel(unitId, "").Content;

            //班级成员
            var allMember = new Member_ClassRegisterBLL()
                                     .GetList(" ClassId=" + classId + " and Delflag=0", "")
                                     .GroupBy(s => s.AccountId);
            totalPage2 = allMember.Count();
            ViewBag.classMember = from c in allMember.Skip((pageIndex2 - 1) * 10).Take(10)
                                  select c.Key;

            //Model
            var list = DataTableToListHelper<Dianda.AP.Model.Course_UnitReplyDetail>
           .ConvertToModel(PagingQueryBll.GetPagingDataTable(@"dbo.Course_UnitReplyDetail"
           , "UnitContent=" + (unitId == 0 ? topicList[0].Id : unitId)
           + " AND ClassId=" + classId + " AND Delflag=0 AND ParentReplyId=0", "id", pageIndex, out totalPage, "*", 3));

            //成员分页
            ViewBag.pageIndex2 = pageIndex2;
            ViewBag.totalPage2 = totalPage2;

            ViewBag.classId = classId;
            //讨论分页
            ViewBag.pageIndex = pageIndex;
            ViewBag.totalPage = totalPage;
            ViewBag.basecount = 3;

            ViewBag.accountId = SiteCache.Instance.LoginInfo.UserId;

            return View(list);
        }

        //删除回复
        public JsonResult DeleteUnitContent(int Id)
        {
            try
            {
                var bll = new Course_UnitReplyDetailBLL();
                var model = bll.GetModel(Id, "");
                model.Delflag = true;
                bll.Update(model);
                return Json(new { Code = 0, Msg = "操作成功" }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Code = -1, Msg = ex.Message }, JsonRequestBehavior.AllowGet);
            }
        }

        //回复
        public JsonResult ReplyUnitContent(int uId, int classId, int accountId, int pId, string Content)
        {
            try
            {
                var bll = new Course_UnitReplyDetailBLL();
                var rootId = 0;
                rootId = GetRootId(pId);

                var model = new Course_UnitReplyDetail();
                model.UnitContent = uId;
                model.ClassId = classId;
                model.Content = Content;
                model.AccountId = accountId;
                model.ParentReplyId = rootId;
                model.Delflag = false;
                model.CreateDate = DateTime.Now;
                bll.Add(model);
                return Json(new { Code = 0, Msg = "操作成功" }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Code = -1, Msg = ex.Message }, JsonRequestBehavior.AllowGet);
            }
        }

        //根级回复
        private int GetRootId(int pId)
        {
            if (pId == 0)
                return pId;
            else
            {
                var parent = new Course_UnitReplyDetailBLL().GetModel(pId, "");

                if (parent.ParentReplyId.Value == 0)
                {
                    return parent.Id;
                }
                else
                {
                    var root = new Course_UnitReplyDetailBLL().GetModel(parent.ParentReplyId.Value, "");
                    return root.Id;
                }
            }
        }

        //班级测验
        public ActionResult ClassQuiz(int classId, string unit, string status, int pageIndex = 1)
        {

            int totalPage = 0;

            string where = "mc.ClassId = " + classId + " AND mc.Delflag=0";

            string param_unit = string.IsNullOrEmpty(unit) ? "" : " AND cu.Id= " + unit;//单元

            string param_status = "";//状态

            switch (status)
            {
                case "-1"://未提交
                    param_status = @" and not EXISTS ( SELECT 1
                     FROM   dbo.Member_ContentAnswerResult cr
                            JOIN dbo.Course_UnitContent cu ON cr.UnitContent = cu.Id
                     WHERE  mc.AccountId = cr.AccountId
                            AND cr.ClassId = mc.ClassId
                            AND cu.UnitType = 5 " + param_unit + " )";
                    break;
                case "0"://单元未得分
                    param_status = @" AND  EXISTS ( SELECT 1
                     FROM   dbo.Member_ContentAnswerResult cr
                            JOIN dbo.Course_UnitContent cu ON cr.UnitContent = cu.Id
                     WHERE  mc.AccountId = cr.AccountId
                            AND cr.ClassId = mc.ClassId
                            AND cu.UnitType = 5 " + param_unit + " AND cr.score IS  NULL) ";
                    break;
                case "1"://单元已得分
                    param_status = @" AND  EXISTS ( SELECT 1
                     FROM   dbo.Member_ContentAnswerResult cr
                            JOIN dbo.Course_UnitContent cu ON cr.UnitContent = cu.Id
                     WHERE  mc.AccountId = cr.AccountId
                            AND cr.ClassId = mc.ClassId
                            AND cu.UnitType = 5 " + param_unit + " AND cr.score IS NOT NULL) ";
                    break;
                default:
                    break;
            }

            //Model
            var list = DataTableToListHelper<Dianda.AP.Model.Member_BaseInfo>
           .ConvertToModel(PagingQueryBll.GetPagingDataTable(@"dbo.Member_ClassRegister mc
        JOIN dbo.Member_Account ma ON mc.AccountId = ma.Id
        JOIN dbo.Member_BaseInfo mb ON ma.Id = mb.AccountId", where + param_status, "mb.CreateDate", pageIndex, out totalPage, @"mb.* ,
        cqId = ( SELECT TOP 1
                                    cr.Id
                             FROM   dbo.Member_ContentAnswerResult cr
                                    JOIN dbo.Course_UnitContent cu ON cr.UnitContent = cu.Id
                             WHERE  cr.ClassId = mc.ClassId
                                    AND cr.AccountId = mc.AccountId
                                    AND cu.UnitType = 5 " + param_unit + " )"));

            var classUnit = new Member_ContentAnswerResultBLL().GetListModel(" ClassId=" + classId).GroupBy(s => s.UnitContent);
            ViewBag.UnitList = from c in classUnit select c.Key;

            ViewBag.classId = classId;
            //分页
            ViewBag.pageIndex = pageIndex;
            ViewBag.totalPage = totalPage;
            ViewBag.basecount = 10;
            return View(list);
        }

        //测验打分
        public JsonResult AddQuizScore(int Id, string Val)
        {
            try
            {
                var bll = new Member_ContentAnswerResultBLL();
                var model = bll.GetModel(Id);
                model.Score = Convert.ToInt32(Val);
                bll.Update(model);

                return Json(new { Code = 0, Msg = "提交成功" }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Code = -1, Msg = ex.Message }, JsonRequestBehavior.AllowGet);
            }
        }

        //班级考试
        public ActionResult ClassExam(int classId, string status, int pageIndex = 1)
        {

            int totalPage = 0;

            string where = "mc.ClassId = " + classId + " AND mc.Delflag=0";

            string param_status = "";//状态

            switch (status)
            {
                case "-1"://未提交
                    param_status = @" and not EXISTS ( SELECT 1
                     FROM   dbo.Member_Course_UnitContentTestAnswerResult ct
                            JOIN dbo.Course_UnitContent cu ON cr.UnitContent = cu.Id
                     WHERE  mc.AccountId = ct.AccountId
                            AND ct.ClassId = mc.ClassId
                            AND ct.UnitType = 6 )";
                    break;
                case "0"://单元未得分
                    param_status = @" AND  EXISTS ( SELECT 1
                     FROM   dbo.Member_Course_UnitContentTestAnswerResult ct
                            JOIN dbo.Course_UnitContent cu ON cr.UnitContent = cu.Id
                     WHERE  mc.AccountId = ct.AccountId
                            AND ct.ClassId = mc.ClassId
                            AND ct.UnitType = 6   AND cr.score IS  NULL) ";
                    break;
                case "1"://单元已得分
                    param_status = @" AND  EXISTS ( SELECT 1
                     FROM   dbo.Member_Course_UnitContentTestAnswerResult ct
                            JOIN dbo.Course_UnitContent cu ON cr.UnitContent = cu.Id
                     WHERE  mc.AccountId = ct.AccountId
                            AND ct.ClassId = mc.ClassId
                            AND ct.UnitType = 6   AND cr.score IS NOT NULL) ";
                    break;
                default:
                    break;
            }

            //Model
            var list = DataTableToListHelper<Dianda.AP.Model.Member_BaseInfo>
           .ConvertToModel(PagingQueryBll.GetPagingDataTable(@"dbo.Member_ClassRegister mc
        JOIN dbo.Member_Account ma ON mc.AccountId = ma.Id
        JOIN dbo.Member_BaseInfo mb ON ma.Id = mb.AccountId", where + param_status, "mb.CreateDate", pageIndex, out totalPage, @"mb.* ,
        cqId = ( SELECT TOP 1
                                    ct.Id
                              FROM   dbo.Member_Course_UnitContentTestAnswerResult ct
                                    JOIN dbo.Course_UnitContent cu ON ct.UnitContent = cu.Id
                             WHERE  ct.ClassId = mc.ClassId
                                    AND ct.AccountId = mc.AccountId
                                    AND cu.UnitType = 6 )"));

            var classUnit = new Member_ContentAnswerResultBLL().GetListModel(" ClassId=" + classId).GroupBy(s => s.UnitContent);
            ViewBag.UnitList = from c in classUnit select c.Key;

            ViewBag.classId = classId;
            //分页
            ViewBag.pageIndex = pageIndex;
            ViewBag.totalPage = totalPage;
            ViewBag.basecount = 10;
            return View(list);
        }

        //考试打分
        public JsonResult AddExamScore(int Id, string Val)
        {
            try
            {
                var bll = new Member_Course_UnitContentTestAnswerResultBLL();
                var model = bll.GetModel(Id, "");
                model.Score = Convert.ToDouble(Val);
                bll.Update(model);

                return Json(new { Code = 0, Msg = "提交成功" }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Code = -1, Msg = ex.Message }, JsonRequestBehavior.AllowGet);
            }
        }

        //结业评价
        public ActionResult ClassGraduate(int classId, int pageIndex = 1)
        {

            int totalPage = 0;

            string where = "mc.ClassId = " + classId + " AND mc.Delflag=0";


            //Model
            var list = DataTableToListHelper<Dianda.AP.Model.Member_BaseInfo>
           .ConvertToModel(PagingQueryBll.GetPagingDataTable(@"dbo.Member_ClassRegister mc
        JOIN dbo.Member_Account ma ON mc.AccountId = ma.Id
        JOIN dbo.Member_BaseInfo mb ON ma.Id = mb.AccountId", where, "mb.CreateDate", pageIndex, out totalPage, @"mb.* "));

            var classUnit = new Member_ContentAnswerResultBLL().GetListModel(" ClassId=" + classId).GroupBy(s => s.UnitContent);
            ViewBag.UnitList = from c in classUnit select c.Key;

            ViewBag.classId = classId;
            //分页
            ViewBag.pageIndex = pageIndex;
            ViewBag.totalPage = totalPage;
            ViewBag.basecount = 10;
            return View(list);
        }

        //结业打分
        public ActionResult ResultAction(int classId, string Ids, int Val, string Remark)
        {
            try
            {
                var bll = new Member_ClassRegisterBLL();
                var ids = Ids.Split(',');
                foreach (var id in ids)
                {
                    if (!string.IsNullOrEmpty(id))
                    {
                        var model = bll.GetList(" ClassId=" + classId + " and AccountId=" + id.ToInt(), "").First();

                        model.Result = Val;
                        if (Val != 1)
                        {
                            model.ApplyRemark = Remark;
                        }
                        model.ResultCreater = SiteCache.Instance.LoginInfo.UserId;
                        bll.Update(model);

                        if (Val == 1)//如果结论是合格，则要更新用户学分
                        {
                            var tranFieldModel = new Traning_DetailBLL().GetModel(model.TrainingId.Value, "");

                            var tranEditModel = new Member_TrainingReditBLL().GetList(" TrainingField=" + tranFieldModel.TraingField
                                + " and PlanId=" + model.PlanId + " and AccountId=" + model.AccountId, "");
                            Member_TrainingRedit tranEdit = null;
                            if (tranEditModel == null || tranEditModel.Count == 0)//创建
                            {
                                tranEdit = new Member_TrainingRedit();
                                tranEdit.AccountId = model.AccountId;
                                tranEdit.CreateDate = DateTime.Now;
                                tranEdit.Credits = tranFieldModel.TotalTime.Value;
                                tranEdit.Delflag = false;
                                tranEdit.PlanId = model.PlanId;
                                tranEdit.TrainingField = model.TrainingId.Value;
                                new Member_TrainingReditBLL().Add(tranEdit);
                            }
                            else//更新
                            {
                                tranEdit = tranEditModel.First();
                                tranEdit.Credits += tranFieldModel.TotalTime.Value;
                                new Member_TrainingReditBLL().Update(tranEdit);
                            }
                            var traningCredit = DataTableToListHelper<Training_Credits>.ConvertToModel(
                                new Training_CreditsBLL().GetList(" PlanId=" + model.PlanId + " and Delflag=0", "")
                                );//查找学时学分
                            if (traningCredit != null && traningCredit.Count > 0) //轮循所有大类
                            {
                                bool graduateFlag = true;
                                var member_traningBll = new Member_TrainingReditBLL();
                                foreach (var item in traningCredit)
                                {
                                    var traning_credit = member_traningBll.GetList
                                        (" PlanId=" + model.PlanId + " and AccountId=" + model.AccountId + " and TrainingField=" + item.TraningField
                                        , "");
                                    if (traningCredit != null && traningCredit.Count > 0)
                                    {
                                        if (traningCredit.First().MinValue > tranEdit.Credits)
                                        {
                                            graduateFlag = false;
                                            break;
                                        }
                                    }
                                }
                                if (graduateFlag)//所有大类学分均合格,更新Member_PlanOverall表的用户合格状态。
                                {
                                    var Member_PlanOverallBll = new Member_PlanOverallBLL();
                                    var Member_PlanOverall = Member_PlanOverallBll.GetListModel(" PlanId=" + model.PlanId + " and AccountId=" + model.AccountId);
                                    if (Member_PlanOverall != null && Member_PlanOverall.Count > 0)
                                    {
                                        var item = Member_PlanOverall.First();
                                        item.Result = 1;
                                        Member_PlanOverallBll.Update(item);
                                    }
                                    else
                                    {
                                        var item = new Member_PlanOverall();
                                        item.Result = 1;
                                        item.PlanId = model.PlanId;

                                        item.AccountId = model.AccountId;
                                        item.CreateDate = DateTime.Now;
                                        item.Delflag = false;

                                        Member_PlanOverallBll.Add(item);
                                    }
                                }
                            }

                        }
                    }
                }

                return Json(new { Code = 0, Msg = "提交成功" }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Code = -1, Msg = ex.Message }, JsonRequestBehavior.AllowGet);
            }
        }

        //添加外部作业
        public JsonResult AddClassOutMission(int classId, string title, string content, int startdate
            , int enddate, string attlist)
        {

            try
            {
                var classObj = new Class_DetailBLL().GetModel(classId);
                var bll = new Class_HomeWorkMissionBLL();
                var model = new Class_HomeWorkMission();
                model.ClassId = classId;
                model.Title = title;
                model.Content = content;
                model.StartDate = startdate != -1 ? classObj.OpenClassFrom.AddDays(startdate) : Convert.ToDateTime("1800-01-01");
                model.EndDate = enddate != -1 ? classObj.OpenClassFrom.AddDays(enddate) : Convert.ToDateTime("1800-01-01");
                if (!string.IsNullOrEmpty(attlist))
                {
                    var json = "[";
                    var attArry = attlist.Remove(attlist.LastIndexOf('|'),1).Split('|');
                    for (int i = 0; i < attArry.Length; i++)
                    {
                        if (!string.IsNullOrEmpty(attArry[i]))
                        {
                            json += "{"+ attArry[i];
                            if (i < attArry.Length - 1)
                                json +=  "}," ;
                            else
                                json +=  "}";
                        }
                        
                    }
                    json += "]";
                    model.AttList = json;
                }
                model.Creater = SiteCache.Instance.LoginInfo.UserId;
                model.CreateDate = DateTime.Now;
                model.Display = true;
                model.Delflag = false;
                bll.Add(model);

                return Json(new { Code = 0, Msg = "提交成功" }, JsonRequestBehavior.AllowGet);
            }
            catch (Exception ex)
            {
                return Json(new { Code = -1, Msg = ex.Message }, JsonRequestBehavior.AllowGet);
            }

        }


        //外部作业列表
        public ActionResult ClassOutMissionList(int classId,string status, string homework,int pageIndex = 1)
        {
            int totalPage = 0;

            string where = "mc.ClassId = " + classId + " AND mc.Delflag=0";

            string param_unit = string.IsNullOrEmpty(homework) ? "" : " AND cm.Id= " + homework;//作业

            string param_status = "";//状态

            switch (status)
            {
                case "-1"://未提交
                    param_status = @" and not EXISTS ( SELECT  1
FROM    dbo.Class_HomeWork ch
        JOIN dbo.Class_HomeWorkMission cm ON cm.Id=ch.HomeWorkId
WHERE   mc.AccountId = ch.AccountId
        AND cm.ClassId = mc.ClassId " + param_unit + " )";
                    break;
                case "0"://单元未得分
                    param_status = @" AND  EXISTS (ELECT  1
FROM    dbo.Class_HomeWork ch
        JOIN dbo.Class_HomeWorkMission cm ON cm.Id=ch.HomeWorkId
WHERE   mc.AccountId = ch.AccountId
        AND cm.ClassId = mc.ClassId " + param_unit + " AND cr.score IS  NULL) ";
                    break;
                case "1"://单元已得分
                    param_status = @" AND  EXISTS ( SELECT 1
                     FROM   dbo.Member_ContentAnswerResult cr
                            JOIN dbo.Course_UnitContent cu ON cr.UnitContent = cu.Id
                     WHERE  mc.AccountId = cr.AccountId
                            AND cr.ClassId = mc.ClassId
                            AND cu.UnitType = 5 " + param_unit + " AND cr.score IS NOT NULL) ";
                    break;
                default:
                    break;
            }

            //Model
            var list = DataTableToListHelper<Dianda.AP.Model.Member_BaseInfo>
           .ConvertToModel(PagingQueryBll.GetPagingDataTable(@"dbo.Member_ClassRegister mc
        JOIN dbo.Member_Account ma ON mc.AccountId = ma.Id
        JOIN dbo.Member_BaseInfo mb ON ma.Id = mb.AccountId", where + param_status, "mb.CreateDate", pageIndex, out totalPage, @"mb.* ,
        chId = ( SELECT TOP 1
                        cm.Id
                 FROM   dbo.Class_HomeWorkMission cm
                        JOIN dbo.Class_HomeWork ch ON ch.HomeWorkId=cm.Id
                 WHERE  ch.ClassId = mc.ClassId
                        AND ch.AccountId = mc.AccountId " + param_unit + " )"));

            ViewBag.homeworkList = new Class_HomeWorkMissionBLL().GetListModel(" ClassId=" + classId);

            ViewBag.classId = classId;
            //分页
            ViewBag.pageIndex = pageIndex;
            ViewBag.totalPage = totalPage;
            ViewBag.basecount = 10;
            return View(list);
            
        }
    }
}
