using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using Dianda.AP.Model;
using Dianda.AP.BLL;
using System.Data;
using HttpMultipartParser;
using System.IO;
using System.Text.RegularExpressions;

namespace Web.Areas.Prepare.Controllers
{
    public class AccountEditController : Controller
    {
        //
        // GET: /Prepare/AccountEdit/
        AccountEditBLL bll = new AccountEditBLL();

        public ActionResult Index()
        {
            DataTable Nationdt = bll.GetNation(1);
            DataTable Politicaldt = bll.GetNation(3);
            DataTable EduLeveldt = bll.GetNation(4);
            DataTable EduDegreedt = bll.GetNation(5);
            DataTable EduMajordt = bll.GetNation(6);  
            List<SelectListItem> Nation = new List<SelectListItem>();
            List<SelectListItem> Political = new List<SelectListItem>();
            List<SelectListItem> EduLevel = new List<SelectListItem>();
            List<SelectListItem> EduDegree = new List<SelectListItem>();
            List<SelectListItem> EduMajor = new List<SelectListItem>();
                
            for (int i = 0; i < Nationdt.Rows.Count; i++)
            {
                SelectListItem item = new SelectListItem();
                item.Text = Nationdt.Rows[i][1].ToString();
                item.Value = Nationdt.Rows[i][0].ToString();
                Nation.Add(item);
            }
            for (int i = 0; i < Politicaldt.Rows.Count; i++)
            {
                SelectListItem item = new SelectListItem();
                item.Text = Politicaldt.Rows[i][1].ToString();
                item.Value = Politicaldt.Rows[i][0].ToString();
                Political.Add(item);
            }
            for (int i = 0; i < EduLeveldt.Rows.Count; i++)
            {
                SelectListItem item = new SelectListItem();
                item.Text = EduLeveldt.Rows[i][1].ToString();
                item.Value = EduLeveldt.Rows[i][0].ToString();
                EduLevel.Add(item);
            }
            for (int i = 0; i < EduDegreedt.Rows.Count; i++)
            {
                SelectListItem item = new SelectListItem();
                item.Text = EduDegreedt.Rows[i][1].ToString();
                item.Value = EduDegreedt.Rows[i][0].ToString();
                EduDegree.Add(item);
            }
            for (int i = 0; i < EduMajordt.Rows.Count; i++)
            {
                SelectListItem item = new SelectListItem();
                item.Text = EduMajordt.Rows[i][1].ToString();
                item.Value = EduMajordt.Rows[i][0].ToString();
                EduMajor.Add(item);
            }

            ViewData["NationList"] = Nation;
            ViewData["PoliticalList"] = Political;
            ViewData["EduLevelList"] = EduLevel;
            ViewData["EduDegreeList"] = EduDegree;
            ViewData["EduMajorList"] = EduMajor;

            AccountEditModel model = bll.GetModel(Code.SiteCache.Instance.LoginInfo.UserId);
            ViewData["UserName"] = Code.SiteCache.Instance.UserName.ToString();
            ViewData["Email"] = bll.GetEmail(Code.SiteCache.Instance.LoginInfo.UserId);
            if (model == null)
            {
                ViewData["Type"] = "Add";
            }
            else
            {
                ViewData["Type"] = "Edit";
                model.TeachStudySection = bll.TeachStudySection(model.AccountId);
                model.TeachSubject = bll.TeachSubject(model.AccountId);
                model.TeachGrade = bll.TeachGrade(model.AccountId);
                ViewData["Nation"] = model.Nation;
                ViewData["PoliticalStatus"] = model.PoliticalStatus;
                ViewData["EduLevel"] = model.EduLevel;
                ViewData["EduDegree"] = model.EduDegree;
                ViewData["EduMajor"] = model.EduMajor;
                ViewData["Sex"] = model.Sex;
            }
            return View(model);
        }


        public ActionResult Edit(AccountEditModel model)
        {
            string emailStr = @"^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,5})+$";
            string shenfenz = @"^(^\d{15}$|^\d{18}$|^\d{17}(\d|X|x))$";
            string moblie = @"^[1]+[3,5]+\d{9}";
            Regex emailreg = new Regex(emailStr);
            Regex sfz = new Regex(shenfenz);
            Regex phone = new Regex(moblie);
            if (!emailreg.IsMatch(model.Email.Trim()))
            {
                return Content("<script>alert('邮箱格式不正确！！！');location.href='/Prepare/AccountEdit/Index';</script>");
            }
            if (!sfz.IsMatch(model.CredentialsNumber.Trim()))
            {
                return Content("<script>alert('身份证号格式不正确！！！');location.href='/Prepare/AccountEdit/Index';</script>");
            }
            if (!phone.IsMatch(model.Mobile.Trim()))
            {
                return Content("<script>alert('手机号码格式不正确！！！');location.href='/Prepare/AccountEdit/Index';</script>");
            }

            if (bll.Edit(model))
            {
                return Content("<script>alert('修改成功！！！');location.href='/Prepare/AccountEdit/List';</script>");
            }
            else
            {
                return Content("<script>alert('修改失败！！！');return false;</script>");
            }
        }


        public ActionResult List()
        {
            DataTable dt = bll.GetList(Code.SiteCache.Instance.LoginInfo.UserId);
            dt.Columns.Add("TeachStudySection");
            dt.Columns.Add("TeachSubject");
            dt.Columns.Add("TeachGrade");
            if (dt.Rows.Count > 0)
            {
                dt.Rows[0]["TeachStudySection"] = bll.TeachStudySection(Code.SiteCache.Instance.LoginInfo.UserId);
                dt.Rows[0]["TeachSubject"] = bll.TeachSubject(Code.SiteCache.Instance.LoginInfo.UserId);
                dt.Rows[0]["TeachGrade"] = bll.TeachGrade(Code.SiteCache.Instance.LoginInfo.UserId);
            }
            ViewData["UserName"] = Code.SiteCache.Instance.UserName;
            ViewData["Email"] = bll.GetEmail(Code.SiteCache.Instance.LoginInfo.UserId);
            ViewBag.GetModel = dt;
            return View();
        }


        public ActionResult Add(AccountEditModel model)
        {
            string emailStr = @"^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,5})+$";
            string shenfenz = @"^(^\d{15}$|^\d{18}$|^\d{17}(\d|X|x))$";
            string moblie = @"^[1]+[3,5]+\d{9}";
            Regex emailreg = new Regex(emailStr);
            Regex sfz = new Regex(shenfenz);
            Regex phone = new Regex(moblie);
            if (!emailreg.IsMatch(model.Email.Trim()))
            {
                return Content("<script>alert('邮箱格式不正确！！！');location.href='';</script>");
            }
            if (!sfz.IsMatch(model.CredentialsNumber.Trim()))
            {
                return Content("<script>alert('身份证号格式不正确！！！');location.href='';</script>");
            }
            if (!phone.IsMatch(model.Mobile.Trim()))
            {
                return Content("<script>alert('手机号码格式不正确！！！');location.href='';</script>");
            }

            model.AccountId = Code.SiteCache.Instance.LoginInfo.UserId;
            if (model != null)
            {
                if (bll.Add(model))
                {
                    return Content("<script>alert('修改成功！！！');location.href='/Prepare/AccountEdit/List';</script>");
                }
                else
                {
                    return Content("<script>alert('修改失败！！！');return false;</script>");
                }
            }
            else
            {
                return Content("<script>alert('数据为空！！！');return false;</script>");
            }
        }

        public ActionResult PicUpdate()
        {
            var parser = new MultipartFormDataParser(Request.InputStream);
            if (parser.Files != null && parser.Files.Count > 0)
            {
                string houzhui = parser.Files[0].FileName.Substring(parser.Files[0].FileName.LastIndexOf(".")).ToUpper();
                if (houzhui != ".JPG" && houzhui != ".PNG" && houzhui != ".JPGE" && houzhui != ".GIF")
                {
                    return Content("no;请选择JPG、PNG、JPGE、GIF格式的图片！！！");
                }

                string path = Server.MapPath("/Areas/Prepare/Image/");
                if (!Directory.Exists(path))
                    Directory.CreateDirectory(path);
                string fileName = path + Guid.NewGuid().ToString("N") + houzhui;
                Stream stream = parser.Files[0].Data;
                StreamWriter sw = new StreamWriter(fileName);
                parser.Files[0].Data.CopyTo(sw.BaseStream);
                sw.Flush();
                sw.Close();
                return Content("yes;" + fileName);
            }
            else
            {
                return Content("no;未读取到图片！！！");
            }
            
        }
    }
}
