using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Text;
using Dianda.AP.Model;
using System.Web.Mvc;

namespace Dianda.AP.DAL
{
	public class News_DetailDAL
	{
		/// <summary>
		/// 取得一条记录
		/// </summary>
		/// <param name="id"></param>
		/// <param name="where"></param>
		/// <returns></returns>
		public News_Detail GetModel(int id, string where)
		{
            string sql = "select a.*,b.Title as PlanTitle,c.Title as OrganTitle from [dbo].[News_Detail] a left join Training_Plan b on a.PlanId = b.Id left join Organ_Detail c on a.OrganId = c.Id where a.Id=@Id ";
			if (!string.IsNullOrEmpty(where))
				sql += where;
			SqlParameter[] cmdParams = new SqlParameter[]{
				new SqlParameter("@Id", SqlDbType.Int, 4) { Value = id }
			};
			using (IDataReader reader = MSEntLibSqlHelper.ExecuteDataReaderBySql(sql, cmdParams))
			{
				if (reader.Read())
				{
					News_Detail model = new News_Detail();
					ConvertToModel(reader, model);
					return model;
				}
				else
				{
					return null;
				}
			}
		}

		/// <summary>
		/// 新增一条记录
		/// </summary>
		/// <param name="model"></param>
		/// <returns></returns>
		public int Add(News_Detail model)
		{
			StringBuilder sql = new StringBuilder();
			sql.Append("insert into [dbo].[News_Detail] ([Title],[Content],[Level],[sort],[OrganId],[Creater],[PlanId],[Display],[Delflag],[PublishDate],[CreateDate])");
			sql.Append(" values (@Title,@Content,@Level,@sort,@OrganId,@Creater,@PlanId,@Display,@Delflag,@PublishDate,@CreateDate)");
			sql.Append(" set @Id=@@IDENTITY");
			SqlParameter[] cmdParams = new SqlParameter[]{
				new SqlParameter("@Id", SqlDbType.Int, 4) { Value = model.Id, Direction = ParameterDirection.Output },
				new SqlParameter("@Title", SqlDbType.NVarChar, 40) { Value = model.Title },
				new SqlParameter("@Content", SqlDbType.VarChar, 4000) { Value = model.Content },
				new SqlParameter("@Level", SqlDbType.Int, 4) { Value = model.Level },
				new SqlParameter("@sort", SqlDbType.Int, 4) { Value = model.sort },
				new SqlParameter("@OrganId", SqlDbType.Int, 4) { Value = model.OrganId },
				new SqlParameter("@Creater", SqlDbType.Int, 4) { Value = model.Creater },
				new SqlParameter("@PlanId", SqlDbType.Int, 4) { Value = model.PlanId },
				new SqlParameter("@Display", SqlDbType.Bit, 1) { Value = model.Display },
				new SqlParameter("@Delflag", SqlDbType.Bit, 1) { Value = model.Delflag },
				new SqlParameter("@PublishDate", SqlDbType.DateTime, 8) { Value = model.PublishDate },
				new SqlParameter("@CreateDate", SqlDbType.DateTime, 8) { Value = model.CreateDate }
			};
			int result = Convert.ToInt32(MSEntLibSqlHelper.ExecuteNonQueryBySql(sql.ToString(), cmdParams));
			model.Id = Convert.ToInt32(cmdParams[0].Value);
			return result;
		}

		/// <summary>
		/// 更新一条记录
		/// </summary>
		/// <param name="model"></param>
		/// <returns></returns>
		public int Update(News_Detail model)
		{
			StringBuilder sql = new StringBuilder();
			sql.Append("update [dbo].[News_Detail] set ");
			sql.Append("[Title]=@Title,[Content]=@Content,[Level]=@Level,[sort]=@sort,[OrganId]=@OrganId,[Creater]=@Creater,[PlanId]=@PlanId,[Display]=@Display,[PublishDate]=@PublishDate");
			sql.Append(" where [Id]=@Id");
			SqlParameter[] cmdParams = new SqlParameter[] {
				new SqlParameter("@Id", SqlDbType.Int, 4) { Value = model.Id },
				new SqlParameter("@Title", SqlDbType.NVarChar, 40) { Value = model.Title },
				new SqlParameter("@Content", SqlDbType.VarChar, 4000) { Value = model.Content },
				new SqlParameter("@Level", SqlDbType.Int, 4) { Value = model.Level },
				new SqlParameter("@sort", SqlDbType.Int, 4) { Value = model.sort },
				new SqlParameter("@OrganId", SqlDbType.Int, 4) { Value = model.OrganId },
				new SqlParameter("@Creater", SqlDbType.Int, 4) { Value = model.Creater },
				new SqlParameter("@PlanId", SqlDbType.Int, 4) { Value = model.PlanId },
				new SqlParameter("@Display", SqlDbType.Bit, 1) { Value = model.Display },
				new SqlParameter("@PublishDate", SqlDbType.DateTime, 8) { Value = model.PublishDate }
			};
			return MSEntLibSqlHelper.ExecuteNonQueryBySql(sql.ToString(), cmdParams);
		}

		/// <summary>
		/// 获取数据集
		/// </summary>
		/// <param name="where"></param>
		/// <param name="orderBy"></param>
		/// <returns></returns>
		public List<News_Detail> GetList(string where, string orderBy)
		{
			StringBuilder sql = new StringBuilder();
			sql.Append("select * from [dbo].[News_Detail]");
			if (!string.IsNullOrEmpty(where))
				sql.Append(" where " + where);
			if (!string.IsNullOrEmpty(orderBy))
				sql.Append(" order by " + orderBy);
			List<News_Detail> list = new List<News_Detail>();
			using (IDataReader reader = MSEntLibSqlHelper.ExecuteDataReaderBySql(sql.ToString()))
			{
				while (reader.Read())
				{
					News_Detail model = new News_Detail();
					ConvertToModel(reader, model);
					list.Add(model);
				}
			}
			return list;
		}

		/// <summary>
		/// 获取分页数据集
		/// </summary>
		/// <param name="pageSize"></param>
		/// <param name="pageIndex"></param>
		/// <param name="where"></param>
		/// <param name="orderBy"></param>
		/// <param name="recordCount"></param>
		/// <returns></returns>
		public List<News_Detail> GetList(int pageSize, int pageIndex, string where, string orderBy, out int recordCount)
		{
			if (string.IsNullOrEmpty(orderBy))
				throw new ArgumentNullException();
			StringBuilder sb = new StringBuilder();
            sb.Append("select count(1) from [dbo].[News_Detail] a where Delflag = 0 and PublishDate <= '" + DateTime.Now.ToString("yyyy-MM-dd") + "' ");
			if (!string.IsNullOrEmpty(where))
				sb.Append(where);
			recordCount = Convert.ToInt32(MSEntLibSqlHelper.ExecuteScalarBySql(sb.ToString()));
			int start = (pageIndex - 1) * pageSize + 1;
			int end = pageIndex * pageSize;
			StringBuilder sql = new StringBuilder();
            sql.Append("select * from (select a.*,b.Title as PlanTitle,c.Title as OrganTitle,ROW_NUMBER() over (order by " + orderBy + ") as RowNum from [dbo].[News_Detail] a left join Training_Plan b on a.PlanId = b.Id left join Organ_Detail c on a.OrganId = c.Id where a.Delflag = 0 ");
			if (!string.IsNullOrEmpty(where))
				sql.Append(where);
			sql.Append(") as T where RowNum between " + start + " and " + end);
			List<News_Detail> list = new List<News_Detail>();
			using (IDataReader reader = MSEntLibSqlHelper.ExecuteDataReaderBySql(sql.ToString()))
			{
				while (reader.Read())
				{
					News_Detail model = new News_Detail();
					ConvertToModel(reader, model);
					list.Add(model);
				}
			}
			return list;
		}

        public List<SelectListItem> GetPlan(int PlanId)
        {
            List<SelectListItem> list = new List<SelectListItem>();
            StringBuilder sql = new StringBuilder();
            sql.Append(" select id,Title from Training_Plan where id=" + PlanId + " ");
            using (IDataReader dr = MSEntLibSqlHelper.ExecuteDataReaderBySql(sql.ToString()))
            {
                while (dr.Read())
                {
                    SelectListItem item = new SelectListItem();
                    item.Value = dr["id"].ToString();
                    item.Text = dr["Title"].ToString();
                    list.Add(item);
                }
            }
            return list;
        }


        public bool NewsDel(int id)
        {
            StringBuilder sql = new StringBuilder();
            sql.Append(" update News_Detail set Delflag = 1 where id=" + id + " ");
            int i = MSEntLibSqlHelper.ExecuteNonQueryBySql(sql.ToString());
            if (i > 0)
            {
                return true;
            }
            else
            {
                return false;
            }
        }

		private void ConvertToModel(IDataReader reader, News_Detail model)
		{
			if (reader["Id"] != DBNull.Value)
				model.Id = Convert.ToInt32(reader["Id"]);

			if (reader["Title"] != DBNull.Value)
				model.Title = reader["Title"].ToString();

			if (reader["Content"] != DBNull.Value)
				model.Content = reader["Content"].ToString();

			if (reader["Level"] != DBNull.Value)
				model.Level = Convert.ToInt32(reader["Level"]);

			if (reader["sort"] != DBNull.Value)
				model.sort = Convert.ToInt32(reader["sort"]);

			if (reader["OrganId"] != DBNull.Value)
				model.OrganId = Convert.ToInt32(reader["OrganId"]);

			if (reader["Creater"] != DBNull.Value)
				model.Creater = Convert.ToInt32(reader["Creater"]);

			if (reader["PlanId"] != DBNull.Value)
				model.PlanId = Convert.ToInt32(reader["PlanId"]);

			if (reader["Display"] != DBNull.Value)
				model.Display = Convert.ToBoolean(reader["Display"]);

			if (reader["Delflag"] != DBNull.Value)
				model.Delflag = Convert.ToBoolean(reader["Delflag"]);

			if (reader["PublishDate"] != DBNull.Value)
				model.PublishDate = Convert.ToDateTime(reader["PublishDate"]);

			if (reader["CreateDate"] != DBNull.Value)
				model.CreateDate = Convert.ToDateTime(reader["CreateDate"]);

            if (reader["PlanTitle"] != DBNull.Value)
                model.PlanTitle = reader["PlanTitle"].ToString();

            if (reader["OrganTitle"] != DBNull.Value)
                model.OrganTitle = reader["OrganTitle"].ToString();
            
		}

	}
}