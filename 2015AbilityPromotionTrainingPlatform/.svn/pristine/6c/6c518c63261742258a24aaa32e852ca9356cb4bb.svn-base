using Dianda.AP.BLL;
using Dianda.AP.Model;
using Dianda.Common;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Web;
using System.Web.Mvc;
using Web.Attributes;

namespace Web.Areas.Statistics.Controllers
{
    public class StatisticsController : Controller
    {
        //
        // GET: /Statistics/Statistics/
        [ValidateInput(false)]
        [UrlDecrypt]
        public ActionResult StatisticsListView(int? RegionId, int? OrganId, int? IsTest, string SearchTxt)
        {
            int PageIndex = 1;
            ViewBag.GroupId = Code.SiteCache.Instance.GroupId;//当前登录人的权限
            ViewBag.ManageOrganId = Code.SiteCache.Instance.ManageOrganId;//当前登录人的权限
            ViewBag.DetailUrl = Code.SiteCache.Instance.GetSysValue("NLPCView");//评测统计详细页链接
            IsTest = (IsTest == null) ? -1 : IsTest;
            ViewBag.IsTest = (IsTest == null) ? -1 : IsTest;
            ViewBag.SearchTxt = SearchTxt;
            
            //加载区县信息
            var List_Regin = this.GetReginListItem();

            var accBll = new accountBLL();
            var List_accountOther = new List<accountOther>();
            var stbSqlWhere = new StringBuilder();

            stbSqlWhere.Append(" 1 = 1 ");

            switch ((int)ViewBag.GroupId)
            {
                case (int)XXW.Enum.PlatformGroupEnum.ManagerCity:
                    {
                        ViewBag.RegionId = (RegionId == null) ? -1 : RegionId;
                        ViewBag.OrganId = (OrganId == null) ? -1 : OrganId;

                        if (ViewBag.RegionId > 0)
                            stbSqlWhere.Append(" and RegionId=" + ViewBag.RegionId);
                        if (ViewBag.OrganId > 0)
                            stbSqlWhere.Append(" and OrganId=" + ViewBag.OrganId);
                        break;
                    }
                case (int)XXW.Enum.PlatformGroupEnum.ManagerArea:
                    {
                        ViewBag.RegionId = (RegionId == null) ? (Code.SiteCache.Instance.RegionId): RegionId;
                        ViewBag.OrganId = (OrganId == null) ?  -1: OrganId;

                        stbSqlWhere.Append(" and RegionId=" + ViewBag.RegionId);
                        if (ViewBag.OrganId > 0)
                        stbSqlWhere.Append(" and OrganId=" + ViewBag.OrganId);
                        
                        break;
                    }
                case (int)XXW.Enum.PlatformGroupEnum.ManagerTraining:
                    {
                        ViewBag.RegionId = (RegionId == null) ? -1 : RegionId;
                        ViewBag.OrganId = (OrganId == null) ? (Code.SiteCache.Instance.ManageOrganId) : OrganId;

                        stbSqlWhere.Append(" and OrganId=" + ViewBag.OrganId);
                        break;
                    }
                case (int)XXW.Enum.PlatformGroupEnum.ManagerSchool:
                    {
                        ViewBag.RegionId = (RegionId == null) ? -1 : RegionId;
                        ViewBag.OrganId = (OrganId == null) ? (Code.SiteCache.Instance.ManageOrganId) : OrganId;

                        stbSqlWhere.Append(" and OrganId=" + ViewBag.OrganId);
                        break;
                    }
                default:
                    {
                        stbSqlWhere.Append(" and 1 != 1 ");
                        break;
                    }
            }
            
            if (IsTest != -1)
            {
                if (IsTest > 0)
                {
                    stbSqlWhere.Append(" and DiscussCnt > 0 ");
                }
                else
                {
                    stbSqlWhere.Append(" and DiscussCnt = 0 ");
                }
            }

            if (!string.IsNullOrEmpty(SearchTxt))
                stbSqlWhere.AppendFormat(" and (RealName like '%{0}%' or TeacherNo like '%{0}%')", SearchTxt);

            int iRecordCount = accBll.GetListOtherCount(stbSqlWhere.ToString());
            int iPageSize = 10, iPageIndex;
            int iPageCount = (int)Math.Ceiling((double)iRecordCount / iPageSize);
            int.TryParse(Request["PageIndex"], out PageIndex);
            int.TryParse(Convert.ToString(PageIndex), out iPageIndex);
            if (iPageIndex < 1)
                iPageIndex = 1;
            else if (iPageIndex > iPageCount)
                iPageIndex = iPageCount;
            //获取分页数据集合
            List_accountOther = accBll.GetListOther(iPageSize, iPageIndex, stbSqlWhere.ToString(), out iRecordCount);

            ViewBag.List_Regin = List_Regin;
            ViewBag.RecordCount = iRecordCount;
            ViewBag.PageCount = iPageCount;
            ViewBag.PageIndex = iPageIndex;
            ViewBag.PageSize = iPageSize;

            return View(List_accountOther);
        }

        [UrlDecrypt]
        public ActionResult Statistics(int? organId)
        {
            ViewBag.OrganId = organId;

            //if (organId == null)
            //    organId = Code.SiteCache.Instance.ManageOrganId;
            int groupId = Code.SiteCache.Instance.GroupId;

            //Organ_Detail organ = new Organ_DetailBLL().GetModel(Convert.ToInt32(organId));
            DataSet ds = null;
            //if (organ != null)
            //{
            var bll = new accountBLL();
            if (organId == null)
            {
                if (groupId == (int)XXW.Enum.PlatformGroupEnum.ManagerCity)//市级数据
                {
                    ViewBag.ParentId = 0;
                    ds = bll.Statistics();
                }
                else if (groupId == (int)XXW.Enum.PlatformGroupEnum.ManagerArea || groupId == (int)XXW.Enum.PlatformGroupEnum.ManagerTraining)//区级、培训机构数据
                {
                    ViewBag.ParentId = 1;
                    ds = bll.Statistics(Code.SiteCache.Instance.RegionId);//取区县（RegionId）
                }
                else if (groupId == (int)XXW.Enum.PlatformGroupEnum.ManagerSchool)//校级数据
                {
                    ViewBag.ParentId = 1;
                    ds = bll.StatisticsSub(Code.SiteCache.Instance.OrganId);
                }
            }
            else
            {
                ViewBag.ParentId = 1;
                ds = bll.Statistics(Convert.ToInt32(organId));
            }
            //}

            return View(ds);
        }

        [UrlDecrypt]
        public ActionResult Chart(int? areaId, int? sexId, int? ageRegionId, int? gradeRegionId, int? regionId, int? schoolId)
        {
            #region 基础字段
            List<Organ_Detail> listArea = new accountBLL().GetArea();
            Dictionary<string, string> area = new Dictionary<string, string>();
            foreach (Organ_Detail item in listArea)
            {
                area.Add(QueryString.UrlEncrypt(item.Id), item.Title);
            }
            ViewBag.AreaData = new SelectList(area, "key", "value", areaId.ToString());

            Dictionary<string, string> sex = new Dictionary<string, string>();
            sex.Add(QueryString.UrlEncrypt(1), "男");
            sex.Add(QueryString.UrlEncrypt(0), "女");
            ViewBag.SexData = new SelectList(sex, "key", "value", sexId.ToString());

            Dictionary<string, string> ageRegion = new Dictionary<string, string>();
            ageRegion.Add(QueryString.UrlEncrypt(1), "20—30");
            ageRegion.Add(QueryString.UrlEncrypt(2), "31—40");
            ageRegion.Add(QueryString.UrlEncrypt(3), "41—50");
            ageRegion.Add(QueryString.UrlEncrypt(4), "50");
            ViewBag.AgeRegionData = new SelectList(ageRegion, "key", "value", ageRegionId.ToString());

            Dictionary<string, string> gradeRegion = new Dictionary<string, string>();
            gradeRegion.Add(QueryString.UrlEncrypt(1), "幼儿园");
            gradeRegion.Add(QueryString.UrlEncrypt(2), "小学");
            gradeRegion.Add(QueryString.UrlEncrypt(3), "初中");
            gradeRegion.Add(QueryString.UrlEncrypt(4), "高中");
            gradeRegion.Add(QueryString.UrlEncrypt(5), "中职校");
            gradeRegion.Add(QueryString.UrlEncrypt(6), "其他");
            ViewBag.GradeRegionData = new SelectList(gradeRegion, "key", "value", gradeRegionId.ToString());

            if (areaId == null)
                areaId = 0;
            List<Organ_StudyRegion> listRegion = new accountBLL().GetRegion(Convert.ToInt32(areaId));
            Dictionary<string, string> region = new Dictionary<string, string>();
            foreach (Organ_StudyRegion item in listRegion)
            {
                region.Add(QueryString.UrlEncrypt(item.Id), item.Title);
            }
            ViewBag.RegionData = new SelectList(region, "key", "value", regionId.ToString());

            if (regionId == null)
                regionId = 0;
            List<Organ_Detail> listSchool = new accountBLL().GetSchool(Convert.ToInt32(regionId));
            Dictionary<string, string> school = new Dictionary<string, string>();
            foreach (Organ_Detail item in listSchool)
            {
                school.Add(QueryString.UrlEncrypt(item.Id), item.Title);
            }
            ViewBag.SchoolData = new SelectList(school, "key", "value", schoolId.ToString());
            #endregion

            Dictionary<int, string> dimension = new Dictionary<int, string>();
            dimension.Add(1, "I技术素养");
            dimension.Add(2, "I计划与准备");
            dimension.Add(3, "I组织与管理");
            dimension.Add(4, "I评论与诊断");
            dimension.Add(5, "I学习与发展");
            dimension.Add(6, "II技术素养");
            dimension.Add(7, "II计划与准备");
            dimension.Add(8, "II组织与管理");
            dimension.Add(9, "II评论与诊断");
            dimension.Add(10, "II学习与发展");

            return View();
        }
        
        #region 加载区县信息
        private List<SelectListItem> GetReginListItem()
        {            
            var bll = new AccountEditBLL();
            var Regindt = bll.GetRegin(5);
            var Regin = new List<SelectListItem>();
            for (int i = 0; i < Regindt.Rows.Count; i++)
            {
                var item = new SelectListItem();
                item.Text = Regindt.Rows[i][1].ToString();
                item.Value = Regindt.Rows[i][0].ToString();
                Regin.Add(item);
            }

            return Regin;
        }
        #endregion

        #region 获取机构信息
        public ActionResult GetRegion(int id)
        {
            var bll = new AccountEditBLL();
            var Regindt = bll.GetRegionTo(id);
            var Regin = new List<SelectListItem>();
            for (int i = 0; i < Regindt.Rows.Count; i++)
            {
                var item = new SelectListItem();
                item.Text = Regindt.Rows[i][1].ToString();
                item.Value = Regindt.Rows[i][0].ToString();
                Regin.Add(item);
            }
            return Json(Regin, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region 获取Url参数加密字符串
        public ActionResult EnCode(string Code)
        {
            string EnCode = Dianda.Common.QueryString.UrlEncrypt(Code);
            return Json(new { Data = EnCode }, JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region ajax
        //学区
        public ActionResult AjaxRegion(string areaId)
        {
            int decAreaId = Convert.ToInt32(QueryString.Decrypt(areaId));
            List<Organ_StudyRegion> list = new accountBLL().GetRegion(decAreaId);
            List<object> objects = new List<object>();
            foreach (Organ_StudyRegion item in list)
            {
                objects.Add(new { key = QueryString.UrlEncrypt(item.Id), value = item.Title });
            }
            return Json(objects, JsonRequestBehavior.AllowGet);
        }

        //学校
        public ActionResult AjaxSchool(string regionId)
        {
            int decRegionId = Convert.ToInt32(QueryString.Decrypt(regionId));
            List<Organ_Detail> list = new accountBLL().GetSchool(decRegionId);
            List<object> objects = new List<object>();
            foreach (Organ_Detail item in list)
            {
                objects.Add(new { key = QueryString.UrlEncrypt(item.Id), value = item.Title });
            }
            return Json(objects, JsonRequestBehavior.AllowGet);
        }
        #endregion 
    }
}
