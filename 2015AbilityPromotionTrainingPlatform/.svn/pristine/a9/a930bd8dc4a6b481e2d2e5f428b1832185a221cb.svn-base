using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using System.Data;
using Dianda.AP.BLL;
using Dianda.AP.Model;
using System.IO;

namespace Web.Areas.Prepare.Controllers
{
    public class CertificateController : Controller
    {
        //
        // GET: /Prepare/Certificate/

        CertificateBLL bll = new CertificateBLL();
        PlanExemptionBLL planbll = new PlanExemptionBLL();
        
        public ActionResult Index()
        {
            int PlanId = Code.SiteCache.Instance.PlanId;    //本学期ID
            int PartitionId = Code.SiteCache.Instance.LoginInfo.PartitionId;     //本区ID
            int OrganId = Code.SiteCache.Instance.ManageOrganId;    //机构ID
            int GroupId = Code.SiteCache.Instance.GroupId;    //权限组ID

            int pageSize = 0;
            if (!string.IsNullOrEmpty(Request["pageSize"]))
            {
                pageSize = Convert.ToInt32(Request["pageSize"]);
            }
            else
            {
                pageSize = 10;
            }
            string where = "";

            if (GroupId == 1)
            {
                where += " and a.AccountId in (select distinct a.AccountId from Member_ClassRegister a where a.PlanId = " + PlanId + " ) ";
            }
            else if (GroupId == 2)
            {
                where += " and a.AccountId in (select distinct a.AccountId from Member_ClassRegister a left join Member_BaseInfo b on a.AccountId = b.AccountId where b.Organid = " + OrganId + " or b.Organid in (select Id from Organ_Detail where ParentId = " + OrganId + ") and a.PlanId = " + PlanId + " ) ";
            }
            else
            {
                where += " and a.AccountId in (select distinct a.AccountId from Member_ClassRegister a left join Member_BaseInfo b on a.AccountId = b.AccountId where b.Organid = " + OrganId + " and a.PlanId = " + PlanId + "  )";
            }

            if (string.IsNullOrEmpty(Request["whereOrganTo"]))
            {
                if (!string.IsNullOrEmpty(Request["whereOrgan"]))
                {
                    where += " and e.id = " + Request["whereOrgan"] + " or e.ParentId = " + Request["whereOrgan"] + " ";
                }
            }
            else
            {
                where += "and e.id = " + Request["whereOrgan"] + " or e.ParentId = " + Request["whereOrganTo"] + " ";
            }

            if (!string.IsNullOrEmpty(Request["whereName"]))
            {
                where += " and a.RealName like '%" + Request["whereName"] + "%' or a.TeacherNo like '%" + Request["whereName"] + "%' or a.CredentialsNumber like '" + Request["whereName"] + "' ";
            }

            ViewBag.ColumnDt = bll.GetTrainingFie();
            ViewBag.GetList = bll.GetList(pageSize, where);
            ViewData["whereOrgan"] = Request["whereOrgan"];
            ViewData["whereOrganTo"] = Request["whereOrganTo"];
            ViewData["whereName"] = Request["whereName"] == null ? "" : Request["whereName"];
            ViewData["pageSize"] = pageSize;
            DataTable dt = planbll.GetOrgan(0);
            List<SelectListItem> selectlist = new List<SelectListItem>();
            List<SelectListItem> tolist = new List<SelectListItem>();
            for (int i = 0; i < dt.Rows.Count; i++)
            {
                SelectListItem item = new SelectListItem()
                {
                    Text = dt.Rows[i][1].ToString(),
                    Value = dt.Rows[i][0].ToString()
                };
                selectlist.Add(item);
            }
            ViewData["Organ"] = selectlist;
            ViewData["OrganTo"] = tolist;
            return View();
        }


        public ActionResult GetOrganTo(int id)
        {
            DataTable dt = planbll.GetOrgan(id);
            List<SelectListItem> list = new List<SelectListItem>();
            for (int i = 0; i < dt.Rows.Count; i++)
            {
                SelectListItem item = new SelectListItem
                {
                    Text = dt.Rows[i][1].ToString(),
                    Value = dt.Rows[i][0].ToString()
                };
                list.Add(item);
            }

            return Json(list, JsonRequestBehavior.AllowGet);
        }


        public ActionResult Export()
        {
            int PlanId = Code.SiteCache.Instance.PlanId;    //本学期ID
            int PartitionId = Code.SiteCache.Instance.LoginInfo.PartitionId;     //本区ID
            int pageSize = 0;
            if (!string.IsNullOrEmpty(Request["EpageSize"]))
            {
                pageSize = Convert.ToInt32(Request["EpageSize"]);
            }
            else
            {
                pageSize = 10;
            }
            string where = "";
            where += " and a.AccountId in (select distinct a.AccountId from Member_ClassRegister a inner join dbo.Training_Plan b on a.PlanId = b.Id where a.PlanId = " + PlanId + " and b.PartitionId = " + PartitionId + " ) ";
            if (string.IsNullOrEmpty(Request["EwhereOrganTo"]))
            {
                if (!string.IsNullOrEmpty(Request["EwhereOrgan"]))
                {
                    where += " and e.id = " + Request["EwhereOrgan"] + " or e.ParentId = " + Request["EwhereOrgan"] + " ";
                }
            }
            else
            {
                where += "and e.id = " + Request["EwhereOrganTo"] + " or e.ParentId = " + Request["EwhereOrganTo"] + " ";
            }

            if (!string.IsNullOrEmpty(Request["EwhereName"]))
            {
                where += " and a.RealName like '%" + Request["EwhereName"] + "%' or a.TeacherNo like '%" + Request["EwhereName"] + "%' or a.CredentialsNumber like '" + Request["EwhereName"] + "' ";
            }

            DataTable ComDt = bll.GetTrainingFie();
            DataTable dt = bll.GetList(pageSize, where);
            if (dt.Rows.Count == 0)
            {
                return Content("no:无导出数据！！！");
            }
            else
            {
                string path = Server.MapPath("/Areas/Prepare/Execl/Certificate/");
                if (!Directory.Exists(path))
                    Directory.CreateDirectory(path);
                string fileName = "证书记录" + Guid.NewGuid().ToString("N") + ".csv";
                string filePath = path + fileName;


                FileStream fs = new FileStream(filePath, System.IO.FileMode.Create, System.IO.FileAccess.Write);
                StreamWriter sw = new StreamWriter(fs, System.Text.Encoding.Default);
                string data = "姓名,师训编号";

                for (int i = 0; i < ComDt.Rows.Count; i++)
                {
                    data += "," + ComDt.Rows[i][1].ToString() + "";
                }
                data += ",结业状态";
                sw.WriteLine(data);

                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    data = "";
                    data += dt.Rows[i]["RealName"].ToString().Replace(",", " ") + "," + dt.Rows[i]["TeacherNo"].ToString().Replace(",", " ");
                    for (int j = 0; j < ComDt.Rows.Count; j++)
                    {
                        string[] src = dt.Rows[i][ComDt.Rows[j][1].ToString()].ToString().Replace(",", " ").Split('/');
                        data += "," + src[0] + "\\" + src[1];
                    }

                    if (dt.Rows[i]["Result"].ToString() == "1")
                    {
                        data += ",未完成";
                    }
                    else
                    {
                        data += ",已完成";
                    }
                    sw.WriteLine(data);
                }

                sw.Close();
                fs.Close();

                return File(new FileStream(Server.MapPath("/Areas/Prepare/Execl/Certificate/" + fileName), FileMode.Open), "application/octet-stream", fileName);
            }
        }
    }
}
