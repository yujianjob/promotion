using Dianda.AP.BLL;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Transactions;
using System.Web;
using System.Web.Mvc;

namespace Web.Areas.Learn.Controllers
{
    public class MyCourseController : Controller
    {
        // 我的选课
        // GET: /Learn/MyCourse/

        #region 已批准
        public ActionResult Passed()
        {
            LearnMyCourseBLL bll = new LearnMyCourseBLL();

            Code.SiteCache cache = Code.SiteCache.Instance;
            int accountId = cache.LoginInfo.UserId;
            int partitionId = cache.LoginInfo.PartitionId;
            int recordCount = bll.GetMyCourseCount(accountId, partitionId, "4");

            int pageSize = 8, pageIndex;
            int pageCount = (int)Math.Ceiling((double)recordCount / pageSize);
            int.TryParse(Request["PageIndex"], out pageIndex);
            if (pageCount == 0)
            {
                pageIndex = 0;
            }
            else
            {
                if (pageIndex < 1)
                    pageIndex = 1;
                else if (pageIndex > pageCount)
                    pageIndex = pageCount;
            }
            ViewBag.RecordCount = recordCount;
            ViewBag.PageCount = pageCount;
            ViewBag.PageIndex = pageIndex;
            ViewBag.PageSize = pageSize;

            return View(bll.GetMyCourseList(pageSize, pageIndex, "A.Id desc", accountId, partitionId, "4"));
        }
        #endregion

        #region 待批准
        public ActionResult ForPassed()
        {
            LearnMyCourseBLL bll = new LearnMyCourseBLL();

            Code.SiteCache cache = Code.SiteCache.Instance;
            int accountId = cache.LoginInfo.UserId;
            int partitionId = cache.LoginInfo.PartitionId;

            int recordCount = bll.GetMyCourseCount(accountId, partitionId, "1,2");

            int pageSize = 8, pageIndex;
            int pageCount = (int)Math.Ceiling((double)recordCount / pageSize);
            int.TryParse(Request["PageIndex"], out pageIndex);
            if (pageCount == 0)
            {
                pageIndex = 0;
            }
            else
            {
                if (pageIndex < 1)
                    pageIndex = 1;
                else if (pageIndex > pageCount)
                    pageIndex = pageCount;
            }
            ViewBag.RecordCount = recordCount;
            ViewBag.PageCount = pageCount;
            ViewBag.PageIndex = pageIndex;
            ViewBag.PageSize = pageSize;

            return View(bll.GetMyCourseList(pageSize, pageIndex, "A.Id desc", accountId, partitionId, "1,2"));
        }
        #endregion

        #region 未批准
        public ActionResult UnPassed()
        {
            LearnMyCourseBLL bll = new LearnMyCourseBLL();

            Code.SiteCache cache = Code.SiteCache.Instance;
            int accountId = cache.LoginInfo.UserId;
            int partitionId = cache.LoginInfo.PartitionId;
            int recordCount = bll.GetMyCourseCount(accountId, partitionId, "3,5");

            int pageSize = 8, pageIndex;
            int pageCount = (int)Math.Ceiling((double)recordCount / pageSize);
            int.TryParse(Request["PageIndex"], out pageIndex);
            if (pageCount == 0)
            {
                pageIndex = 0;
            }
            else
            {
                if (pageIndex < 1)
                    pageIndex = 1;
                else if (pageIndex > pageCount)
                    pageIndex = pageCount;
            }
            ViewBag.RecordCount = recordCount;
            ViewBag.PageCount = pageCount;
            ViewBag.PageIndex = pageIndex;
            ViewBag.PageSize = pageSize;

            return View(bll.GetMyCourseList(pageSize, pageIndex, "A.Id desc", accountId, partitionId, "3,5"));
        }
        #endregion


        #region ajax
        //放弃课程
        public ActionResult AjaxCourseDelete(int id)
        {
            LearnMyCourseBLL bll = new LearnMyCourseBLL();
            using (TransactionScope trans = new TransactionScope())
            {
                try
                {
                    bll.DeleteCourse(id);
                    trans.Complete();
                    return Json(new { Result = true, Msg = "操作成功！" }, JsonRequestBehavior.AllowGet);
                }
                catch (Exception)
                {
                    return Json(new { Result = false, Msg = "操作失败！" }, JsonRequestBehavior.AllowGet);
                }
            }
        }
        #endregion
    }
}
