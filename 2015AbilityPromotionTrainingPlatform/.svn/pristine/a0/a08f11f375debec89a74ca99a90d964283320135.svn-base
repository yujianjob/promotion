using Dianda.AP.DAL;
using Dianda.AP.Model;
using Dianda.AP.Model.Learn.MyLearn;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Dianda.AP.BLL
{
    public class LearnMyLearnBLL
    {
        LearnMyLearnDAL dal = new LearnMyLearnDAL();

        /// <summary>
        /// 新增一条记录
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        public bool Add(Class_Detail model)
        {
            return dal.Add(model) > 0;
        }

        /// <summary>
        /// 更新一条记录
        /// </summary>
        /// <param name="model"></param>
        /// <returns></returns>
        public bool Update(Class_Detail model)
        {
            return dal.Update(model) > 0;
        }

        /// <summary>
        /// 取得一条记录
        /// </summary>
        /// <param name="id"></param>
        /// <param name="where"></param>
        /// <returns></returns>
        public Class_Detail GetModel(int id, string where)
        {
            return dal.GetModel(id, where);
        }

        /// <summary>
        /// 获取数据集
        /// </summary>
        /// <param name="where"></param>
        /// <param name="orderBy"></param>
        /// <returns></returns>
        public List<Class_Detail> GetList(string where, string orderBy)
        {
            return dal.GetList(where, orderBy);
        }

        /// <summary>
        /// 获取分页数据集
        /// </summary>
        /// <param name="pageSize"></param>
        /// <param name="pageIndex"></param>
        /// <param name="where"></param>
        /// <param name="orderBy"></param>
        /// <param name="recordCount"></param>
        /// <returns></returns>
        public List<Class_Detail> GetList(int pageSize, int pageIndex, string where, string orderBy, out int recordCount)
        {
            return dal.GetList(pageSize, pageIndex, where, orderBy, out recordCount);
        }

        /// <summary>
        /// 获取DataTable
        /// </summary>
        /// <param name="where"></param>
        /// <param name="orderBy"></param>
        /// <returns></returns>
        public DataTable GetTable(string where, string orderBy)
        {
            return dal.GetTable(where, orderBy);
        }

        /// <summary>
        /// 获取分页数据集
        /// </summary>
        /// <param name="pageSize"></param>
        /// <param name="pageIndex"></param>
        /// <param name="where"></param>
        /// <param name="orderBy"></param>
        /// <param name="recordCount"></param>
        /// <returns></returns>
        public DataTable GetTable(int pageSize, int pageIndex, string where, string orderBy, out int recordCount)
        {
            return dal.GetTable(pageSize, pageIndex, where, orderBy, out recordCount);
        }


        /// <summary>
        /// 取得我的课程记录数
        /// </summary>
        /// <param name="where">[B.Status] 学习中：5或6；未开始：3；已结束：6 [C.PartitionId] 当前分区Id</param>
        /// <returns></returns>
        public int GetMyLearnCount(string where)
        {
            return dal.GetMyLearnCount(where);
        }

        /// <summary>
        /// 取得我的课程分页数据集
        /// </summary>
        /// <param name="pageSize"></param>
        /// <param name="pageIndex"></param>
        /// <param name="where">B.Status 学习中：5或6；未开始：3；已结束：6     C.PartitionId:当前分区Id</param>
        /// <param name="orderBy"></param>
        /// <returns></returns>
        public List<MyLearnInfo> GetMyLearnList(int pageSize, int pageIndex, string where, string orderBy)
        {
            return dal.GetMyLearnList(pageSize, pageIndex, where, orderBy);
        }

        /// <summary>
        /// 取得外部课程信息
        /// </summary>
        /// <param name="trainingId"></param>
        /// <returns></returns>
        public OutCourseInfo GetOutCourse(int trainingId)
        {
            StringBuilder where = new StringBuilder();
            where.Append("A.Id=" + trainingId);
            return dal.GetOutCourse(where.ToString());
        }
    }
}
